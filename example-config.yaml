# Homeserver details.
homeserver:
    # The address that this appservice can use to connect to the homeserver.
    address: https://example.com
    websocket_proxy: ws://localhost:29331
    ping_interval_seconds: 0
    # The domain of the homeserver (for MXIDs, etc).
    domain: example.com

    # Is the homeserver actually mautrix-asmux?
    asmux: false
    # Does the homeserver support https://github.com/matrix-org/matrix-spec-proposals/pull/2246?
    async_media: false

# Application service host/registration related details.
# Changing these values requires regeneration of the registration.
appservice:
    # Database config.
    database:
        # The database type. Only sqlite3 is supported.
        type: sqlite3
        # SQLite database path
        uri: mautrix-imessage.db

    # The unique ID of this appservice.
    id: imessage
    # Appservice bot details.
    bot:
        # Username of the appservice bot.
        username: imessagebot
        # Display name and avatar for bot. Set to "remove" to remove display name/avatar, leave empty
        # to leave display name/avatar as-is.
        displayname: iMessage bridge bot
        avatar: mxc://maunium.net/tManJEpANASZvDVzvRvhILdX

    # Whether or not to receive ephemeral events via appservice transactions.
    # Requires MSC2409 support (i.e. Synapse 1.22+).
    # You should disable bridge -> sync_with_custom_puppets when this is enabled.
    ephemeral_events: false

    # Authentication tokens for AS <-> HS communication. Autogenerated; do not modify.
    as_token: "This value is generated when generating the registration"
    hs_token: "This value is generated when generating the registration"

# iMessage connection config
imessage:
    # Available platforms:
    # * mac: Standard Mac connector, requires full disk access and will ask for AppleScript and contacts permission.
    # * ios: Jailbreak iOS connector when using with Brooklyn.
    # * android: Equivalent to ios, but for use with the Android SMS wrapper app.
    # * mac-nosip: Mac without SIP connector, runs Barcelona as a subprocess.
    platform: mac
    # Path to the Barcelona executable for the mac-nosip connector
    imessage_rest_path: darwin-barcelona-mautrix
    # Additional arguments to pass to the mac-nosip connector
    imessage_rest_args: []
    # Whether to log the contents of IPC payloads
    log_ipc_payloads: false
    # Interval to ping Barcelona at. The process will exit if Barcelona doesn't respond in time.
    ping_interval_seconds: 15
    # Whether to merge iMessage and SMS portals into one
    chat_merging: false
    # Whether to tombstone SMS rooms after meging them into iMessage
    tombstone_old_rooms: false

# Bridge config
bridge:
    # The user of the bridge.
    user: "@you:example.com"

    # Localpart template of MXIDs for iMessage users.
    # {{.}} is replaced with the phone number or email of the iMessage user.
    username_template: imessage_{{.}}
    # Displayname template for iMessage users.
    # {{.}} is replaced with the contact list name (if available) or username (phone number or email) of the iMessage user.
    displayname_template: "{{.}} (iMessage)"
    # Should the bridge create a space and add bridged rooms to it?
    personal_filtering_spaces: false

    # Whether or not the bridge should send a read receipt from the bridge bot when a message has been
    # sent to iMessage.
    delivery_receipts: false
    # Whether or not the bridge should send the message status as a custom
    # com.beeper.message_send_status event.
    message_status_events: true
    # Whether or not the bridge should send error notices via m.notice events
    # when a message fails to bridge.
    send_error_notices: true
    # The maximum number of seconds between the message arriving at the
    # homeserver and the bridge attempting to send the message. This can help
    # prevent messages from being bridged a long time after arriving at the
    # homeserver which could cause confusion in the chat history on the remote
    # network. Set to 0 to disable.
    max_handle_seconds: 0
    # Whether or not to sync with custom puppets to receive EDUs that are not normally sent to appservices.
    sync_with_custom_puppets: false
    # Whether or not to update the m.direct account data event when double puppeting is enabled.
    # Note that updating the m.direct event is not atomic (except with mautrix-asmux)
    # and is therefore prone to race conditions.
    sync_direct_chat_list: false
    # Shared secret for https://github.com/devture/matrix-synapse-shared-secret-auth
    #
    # If set, double puppeting will be enabled automatically instead of the user
    # having to find an access token and run `login-matrix` manually.
    login_shared_secret: null
    # Homeserver URL for the double puppet. If null, will use the URL set in homeserver -> address
    double_puppet_server_url: null
    # Maximum age of chats to sync in days.
    chat_sync_max_age: 0.5
    # Maximum number of messages to backfill for new portal rooms.
    initial_backfill_limit: 100
    # Whether or not notifications should be turned off while filling initial history.
    # Only applicable when using double puppeting.
    initial_backfill_disable_notifications: true
    # Whether or not the bridge should periodically resync chat and contact info.
    periodic_sync: true
    # Should the bridge look through joined rooms to find existing portals if the database has none?
    # This can be used to recover from bridge database loss.
    find_portals_if_db_empty: false
    # Media viewer settings. See https://gitlab.com/beeper/media-viewer for more info.
    # Used to send media viewer links instead of full files for attachments that are too big for MMS.
    media_viewer:
        # The address to the media viewer. If null, media viewer links will not be used.
        url: null
        # The minimum number of bytes in a file before the bridge switches to using the media viewer when sending MMS.
        # Note that for unencrypted files, this will use a direct link to the homeserver rather than the media viewer.
        sms_min_size: 409600
        # Same as above, but for iMessages.
        imessage_min_size: 52428800
        # Template text when inserting media viewer URLs.
        # %s is replaced with the actual URL.
        template: "Full size attachment: %s"
    # Should we rewrite the sender in a DM to match the chat GUID?
    # This is helpful when the sender ID shifts depending on the device they use, since
    # the bridge is unable to add participants to the chat post-creation.
    force_uniform_dm_senders: true
    # Whether or not created rooms should have federation enabled.
    # If false, created portal rooms will never be federated.
    federate_rooms: true
    # Should we convert heif images to jpeg before re-uploading? This increases
    # compatibility, but adds generation loss (reduces quality).
    convert_heif: true
    # Should we convert tiff images to jpeg before re-uploading? This increases
    # compatibility, but adds generation loss (reduces quality).
    convert_tiff: true
    # Modern Apple devices tend to use h265 encoding for video, which is a licensed standard and therefore not
    # supported by most major browsers. If enabled, all video attachments will be converted according to the
    # ffmpeg args.
    convert_video:
        enabled: false
        # Convert to h264 format (supported by all major browsers) at decent quality while retaining original
        # audio. Modify these args to do whatever encoding/quality you want.
        ffmpeg_args: ["-c:v", "libx264", "-preset", "faster", "-crf", "22", "-c:a", "copy"]
        extension: "mp4"
        mime_type: "video/mp4"
    # The prefix for commands.
    command_prefix: "!im"

    # End-to-bridge encryption support options.
    # See https://docs.mau.fi/bridges/general/end-to-bridge-encryption.html
    encryption:
        # Allow encryption, work in group chat rooms with e2ee enabled
        allow: false
        # Default to encryption, force-enable encryption in all portals the bridge creates
        # This will cause the bridge bot to be in private chats for the encryption to work properly.
        default: false
        # Whether or not to use MSC2409/MSC3202 instead of /sync long polling for receiving encryption-related data.
        appservice: false
        # Require encryption, drop any unencrypted messages.
        require: false
        # Enable key sharing? If enabled, key requests for rooms where users are in will be fulfilled.
        # You must use a client that supports requesting keys from other users to use this feature.
        allow_key_sharing: false
        # What level of device verification should be required from users?
        #
        # Valid levels:
        #   unverified - Send keys to all device in the room.
        #   cross-signed-untrusted - Require valid cross-signing, but trust all cross-signing keys.
        #   cross-signed-tofu - Require valid cross-signing, trust cross-signing keys on first use (and reject changes).
        #   cross-signed-verified - Require valid cross-signing, plus a valid user signature from the bridge bot.
        #                           Note that creating user signatures from the bridge bot is not currently possible.
        #   verified - Require manual per-device verification
        #              (currently only possible by modifying the `trust` column in the `crypto_device` database table).
        verification_levels:
            # Minimum level for which the bridge should send keys to when bridging messages from WhatsApp to Matrix.
            receive: unverified
            # Minimum level that the bridge should accept for incoming Matrix messages.
            send: unverified
            # Minimum level that the bridge should require for accepting key requests.
            share: cross-signed-tofu
        # Options for Megolm room key rotation. These options allow you to
        # configure the m.room.encryption event content. See:
        # https://spec.matrix.org/v1.3/client-server-api/#mroomencryption for
        # more information about that event.
        rotation:
            # Enable custom Megolm room key rotation settings. Note that these
            # settings will only apply to rooms created after this option is
            # set.
            enable_custom: false
            # The maximum number of milliseconds a session should be used
            # before changing it. The Matrix spec recommends 604800000 (a week)
            # as the default.
            milliseconds: 604800000
            # The maximum number of messages that should be sent with a given a
            # session before changing it. The Matrix spec recommends 100 as the
            # default.
            messages: 100

    # Settings for relay mode
    relay:
        # Whether relay mode should be allowed.
        enabled: false
        # A list of user IDs and server names who are allowed to be relayed through this bridge. Use * to allow everyone.
        whitelist: []
        # The formats to use when relaying messages to iMessage.
        message_formats:
            m.text: "{{ .Sender.Displayname }}: {{ .Message }}"
            m.notice: "{{ .Sender.Displayname }}: {{ .Message }}"
            m.emote: "* {{ .Sender.Displayname }} {{ .Message }}"
            m.file: "{{ .Sender.Displayname }} sent a file: {{ .FileName }}"
            m.image: "{{ .Sender.Displayname }} sent an image: {{ .FileName }}"
            m.audio: "{{ .Sender.Displayname }} sent an audio file: {{ .FileName }}"
            m.video: "{{ .Sender.Displayname }} sent a video: {{ .FileName }}"

# Logging config.
logging:
    # The directory for log files. Will be created if not found.
    directory: ./logs
    # Available variables: .Date for the file date and .Index for different log files on the same day.
    file_name_format: "{{.Date}}-{{.Index}}.log"
    # Date format for file names in the Go time format: https://golang.org/pkg/time/#pkg-constants
    file_date_format: 2006-01-02
    # Log file permissions.
    file_mode: 0600
    # Timestamp format for log entries in the Go time format.
    timestamp_format: Jan _2, 2006 15:04:05
    # Minimum severity for log messages.
    # Options: debug, info, warn, error, fatal
    print_level: debug
    print_json: false
    file_json: false

# This may be used by external config managers. mautrix-imessage does not read it, but will carry it across configuration migrations.
revision: 0
