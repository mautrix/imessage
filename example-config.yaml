# Homeserver details.
homeserver:
    # The address that this appservice can use to connect to the homeserver.
    address: https://example.com
    websocket_proxy: ws://localhost:29331
    # The domain of the homeserver (for MXIDs, etc).
    domain: example.com

# Application service host/registration related details.
# Changing these values requires regeneration of the registration.
appservice:
    # SQLite database path
    database: mautrix-imessage.db

    # The unique ID of this appservice.
    id: imessage
    # Appservice bot details.
    bot:
        # Username of the appservice bot.
        username: imessagebot
        # Display name and avatar for bot. Set to "remove" to remove display name/avatar, leave empty
        # to leave display name/avatar as-is.
        displayname: iMessage bridge bot
        avatar: mxc://maunium.net/tManJEpANASZvDVzvRvhILdX

    # Authentication tokens for AS <-> HS communication. Autogenerated; do not modify.
    as_token: "This value is generated when generating the registration"
    hs_token: "This value is generated when generating the registration"

# iMessage connection config
imessage:
    # Available platforms:
    # * mac: Standard Mac connector, requires full disk access and will ask for AppleScript and contacts permission.
    # * ios: Jailbreak iOS connector when using with Brooklyn.
    # * android: Equivalent to ios, but for use with the Android SMS wrapper app.
    # * mac-nosip: Mac without SIP connector, runs imessage-rest as a subprocess.
    platform: mac
    # imessage-rest executable for mac-nosip connector
    #imessage_rest_path: ...
    # override the seconds barcelona has to ping before terminating
    #ping_interval_seconds: ...

# Bridge config
bridge:
    # The user of the bridge.
    user: "@you:example.com"

    # Localpart template of MXIDs for iMessage users.
    # {{.}} is replaced with the phone number or email of the iMessage user.
    username_template: imessage_{{.}}
    # Displayname template for iMessage users.
    # {{.}} is replaced with the contact list name (if available) or username (phone number or email) of the iMessage user.
    displayname_template: "{{.}} (iMessage)"

    # Whether or not the bridge should send a read receipt from the bridge bot when a message has been
    # sent to iMessage.
    delivery_receipts: false

    # Whether or not to sync with custom puppets to receive EDUs that are not normally sent to appservices.
    sync_with_custom_puppets: false
    # Whether or not to update the m.direct account data event when double puppeting is enabled.
    # Note that updating the m.direct event is not atomic (except with mautrix-asmux)
    # and is therefore prone to race conditions.
    sync_direct_chat_list: false
    # Shared secret for https://github.com/devture/matrix-synapse-shared-secret-auth
    #
    # If set, custom puppets will be enabled automatically for local users
    # instead of users having to find an access token and run `login-matrix`
    # manually.
    login_shared_secret: null
    # Maximum age of chats to sync in days.
    chat_sync_max_age: 0.5
    # Maximum number of messages to backfill for new portal rooms.
    initial_backfill_limit: 100
    # Whether or not notifications should be turned off while filling initial history.
    # Only applicable when using double puppeting.
    initial_backfill_disable_notifications: true
    # Whether or not the bridge should periodically resync chat and contact info.
    periodic_sync: true
    # Should the bridge look through joined rooms to find existing portals if the database has none?
    # This can be used to recover from bridge database loss.
    find_portals_if_db_empty: false

    # The prefix for commands. Only required in non-management rooms.
    command_prefix: "!im"

    # Whether or not created rooms should have federation enabled.
    # If false, created portal rooms will never be federated.
    federate_rooms: true

    # End-to-bridge encryption support options.
    # See https://docs.mau.fi/bridges/general/end-to-bridge-encryption.html
    encryption:
        # Allow encryption, work in group chat rooms with e2ee enabled
        allow: false
        # Default to encryption, force-enable encryption in all portals the bridge creates
        # This will cause the bridge bot to be in private chats for the encryption to work properly.
        default: false
        # Whether or not to use MSC2409/MSC3202 instead of /sync long polling for receiving encryption-related data.
        appservice: false
        # Options for automatic key sharing.
        key_sharing:
            # Enable key sharing? If enabled, key requests for rooms where users are in will be fulfilled.
            # You must use a client that supports requesting keys from other users to use this feature.
            allow: false
            # Require the requesting device to have a valid cross-signing signature?
            # This doesn't require that the bridge has verified the device, only that the user has verified it.
            # Not yet implemented.
            require_cross_signing: false
            # Require devices to be verified by the bridge?
            # Verification by the bridge is not yet implemented.
            require_verification: true

# Logging config.
logging:
    # The directory for log files. Will be created if not found.
    directory: ./logs
    # Available variables: .Date for the file date and .Index for different log files on the same day.
    file_name_format: "{{.Date}}-{{.Index}}.log"
    # Date format for file names in the Go time format: https://golang.org/pkg/time/#pkg-constants
    file_date_format: 2006-01-02
    # Log file permissions.
    file_mode: 0600
    # Timestamp format for log entries in the Go time format.
    timestamp_format: Jan _2, 2006 15:04:05
    # Minimum severity for log messages.
    # Options: debug, info, warn, error, fatal
    print_level: debug
